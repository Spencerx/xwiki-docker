/*
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
import org.apache.tools.ant.filters.ReplaceTokens

// Run this Gradle build with 'gradle' to generate the various versions and variants from the template directory.
// Whenever a new version of XWiki is out, update this file to update the token values, run gradle and commit the
// result.
//
// Note: As a consequence only update the template files and never the generated files!

defaultTasks 'generate'

def variants = ['mysql-tomcat', 'mariadb-tomcat', 'postgres-tomcat']

// Notes:
// - To compute the XWiki sha256, download the XWiki WAR from
//   http://nexus.xwiki.org/nexus/content/groups/public/org/xwiki/platform/xwiki-platform-distribution-war, and issue:
//   - Unix: sha256sum <binary name>
//   - Mac: shasum --algorithm 256 <binary name>
// - To compute the mysql JDBC sha256, get the JAR at https://search.maven.org/artifact/com.mysql/mysql-connector-j and
//   do the same as for the XWiki sha256.
// - To compute the MariaDB JDBC sha256, get the JAR at
//   https://search.maven.org/artifact/org.mariadb.jdbc/mariadb-java-client and  do the same as for the XWiki sha256.
// - To compute the Postgres JDBC sha256, get the JAR at
//   https://search.maven.org/artifact/org.postgresql/postgresql and do the same as for the XWiki sha256.
// - Use the JDBC driver versions found in the XWiki POM for the specified versions:
//   - mysql: https://github.com/xwiki/xwiki-platform/blob/master/pom.xml#L110 (link for master)
//   - mariadb: https://github.com/xwiki/xwiki-platform/blob/master/pom.xml#L113 (link for master)
//   - postgresql: https://github.com/xwiki/xwiki-platform/blob/master/pom.xml#L119 (link for master)

// Versions of mysql, mariadb and postgres currently in use in the docker images.
def mysql = [
    '9': [
        JDBCVersion: '9.4.0',
        JDBCSha256: '49ed93c8b2bea9cb0929b85a8a28837b191d0f8eac6919fdcef16e36e2cd53b3'
    ]
]

def mariadb = [
    '3.5': [
        JDBCVersion: '3.5.6',
        JDBCSha256: 'a129703efd7b0f334564d46753de999f09b3a361489a2eb647e6020390981cc9'
    ]
]

def postgres = [
    '42': [
        JDBCVersion: '42.7.8',
        JDBCSha256: '2a32a9dcbc42d67a50ad3a0de5efd102c8d2be46720045f2cbd6689f160ab7c7'
    ]
]

def tokens = [
    '17': [
        xwikiVersion: '17.9.0',
        xwikiSha256: '917d927f03630cb7b7811ecca76bb4a3681e55b47ee262ae27c55f4e751439ce',
        mysqlJDBCVersion: mysql['9'].JDBCVersion,
        mysqlJDBCSha256: mysql['9'].JDBCSha256,
        mariadbJDBCVersion: mariadb['3.5'].JDBCVersion,
        mariadbJDBCSha256: mariadb['3.5'].JDBCSha256,
        postgresJDBCVersion: postgres['42'].JDBCVersion,
        postgresJDBCSha256: postgres['42'].JDBCSha256,
        tomcatImageTag: [
            tomcatVersion: '10',
            javaVersion: '21'
        ]
    ],
    '17.4': [
        xwikiVersion: '17.4.7',
        xwikiSha256: '9d1a7736c57ddfb8c996a5999ea50ab956b452e1533df70b9169fbc6c99def06',
        mysqlJDBCVersion: mysql['9'].JDBCVersion,
        mysqlJDBCSha256: mysql['9'].JDBCSha256,
        mariadbJDBCVersion: mariadb['3.5'].JDBCVersion,
        mariadbJDBCSha256: mariadb['3.5'].JDBCSha256,
        postgresJDBCVersion: postgres['42'].JDBCVersion,
        postgresJDBCSha256: postgres['42'].JDBCSha256,
        tomcatImageTag: [
            tomcatVersion: '10',
            javaVersion: '21'
        ]
    ],
    '16': [
        xwikiVersion: '16.10.14',
        xwikiSha256: '2d617d4f05206866187f60098d3f7e4116d83659d89f7b266d1b635ddc32f0fc',
        mysqlJDBCVersion: mysql['9'].JDBCVersion,
        mysqlJDBCSha256: mysql['9'].JDBCSha256,
        mariadbJDBCVersion: mariadb['3.5'].JDBCVersion,
        mariadbJDBCSha256: mariadb['3.5'].JDBCSha256,
        postgresJDBCVersion: postgres['42'].JDBCVersion,
        postgresJDBCSha256: postgres['42'].JDBCSha256,
        tomcatImageTag: [
            tomcatVersion: '9',
            javaVersion: '21'
        ]
    ]
]

task generate() {
    doLast {
        // Copy the template for all versions and variants
        tokens.keySet().each() { version ->
            variants.each() { variant ->
                // Extract the db type and add it as a token
                def (db, servlet) = variant.tokenize('-')
                tokens[version].'db' = db
                // Copy common template files, evaluating groovy in them
                copy {
                    from 'template'
                    into "${version}/${variant}"
                    include '.env'
                    include 'Dockerfile'
                    include 'docker-compose.yml'
                    include 'xwiki/*'
                    expand(tokens[version])
                    filteringCharset = 'UTF-8'
                }
                // Copy DB-specific template files, evaluating groovy in them
                copy {
                    from 'template'
                    into "${version}/${variant}"
                    include "${db}/*"
                    expand(tokens[version])
                    filteringCharset = 'UTF-8'
                }
                // Copy Servlet-specific template files, evaluating groovy in them
                copy {
                    from 'template'
                    into "${version}/${variant}"
                    include "${servlet}/*"
                    expand(tokens[version])
                    filteringCharset = 'UTF-8'
                }
            }
        }
    }
}
